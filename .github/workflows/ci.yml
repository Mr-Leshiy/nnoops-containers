name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  linux:
    runs-on: ubuntu-18.04
    container: veriblock/alt-integration-cpp-dev
    strategy:
      fail-fast: false
      matrix:
        flags: [
          "-DCLANG_TIDY=ON",
          "-DASAN=ON",
          "-DUBSAN=ON",
          "-DCMAKE_BUILD_TYPE=Release",
        ]
    env:
      CC: clang
      CXX: clang++
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: recursive
          clean: true
      - name: cmake
        run: cmake . -Bbuild ${{ matrix.flags }}
      - name: build
        run: cmake --build build -- -j2 install
      - name: test
        run: cd build && ctest

  linux-gcc:
    runs-on: ubuntu-18.04
    env:
      CC: gcc
      CXX: g++
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: recursive
          clean: true
      - name: cmake
        run: cmake . -Bbuild
      - name: build
        run: cmake --build build -- -j2

  windows:
    runs-on: windows-latest
    env:
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: recursive
          clean: true

      - name: cmake
        run: cmake . -Bbuild -A x64
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=TRUE
      - name: build
        run: cmake --build build --parallel 2
      - name: test
        run: cmake --build build --target RUN_TESTS

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        flags: ["-DCMAKE_BUILD_TYPE=Release"]
    env:
      CC: clang
      CXX: clang++
      CTEST_OUTPUT_ON_FAILURE: 1
    steps:
      - uses: actions/checkout@v1
        name: checkout
        with:
          submodules: recursive
          clean: true
      - name: cmake
        run: cmake . -Bbuild ${{ matrix.flags }} -DCMAKE_BUILD_TYPE=Release
      - name: build
        run: cmake --build build -- -j2
      - name: test
        run: cd build && ctest